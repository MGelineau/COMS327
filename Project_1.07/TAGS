
character.h,877
# define CHARACTER_H2,20
#define DIJKSTRA_PATH_MAX 8,83
#define NO_NPCS 9,123
typedef enum __attribute__ ((__packed__)) movement_type 11,143
  move_hiker,12,201
  move_rival,13,215
  move_pace,14,229
  move_wander,15,242
  move_sentry,16,257
  move_explore,17,272
  move_swim,18,288
  move_pc,19,301
  num_movement_types20,312
} movement_type_t;21,333
typedef enum __attribute__ ((__packed__)) character_type 23,353
  char_pc,24,412
  char_hiker,25,423
  char_rival,26,437
  char_swimmer,27,451
  char_other,28,467
  num_character_types29,481
} character_type_t;30,503
class character 34,581
  virtual ~character(36,608
  pair_t pos;37,634
  char symbol;38,648
  int next_turn;39,663
  int seq_num;40,680
class npc 43,699
  character_type_t ctype;45,739
  movement_type_t mtype;46,765
  int defeated;47,790
  pair_t dir;48,806
class pc 51,824

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

io.h,55
# define IO_H2,13
typedef int16_t pair_t[pair_t5,45

pair.h,139
# define PAIR_H2,15
typedef enum dim 4,32
  dim_x,5,51
  dim_y,6,60
  num_dims7,69
} dim_t;8,80
typedef int16_t pair_t[pair_t10,90

poke327.h,2282
# define POKE327_H2,18
#define malloc(11,142
# define rand_under(19,427
# define rand_range(23,570
# define UNUSED(25,644
#define MAP_X 27,675
#define MAP_Y 28,705
#define MIN_TREES 29,735
#define MIN_BOULDERS 30,765
#define TREE_PROB 31,795
#define BOULDER_PROB 32,825
#define WORLD_SIZE 33,855
#define MIN_TRAINERS 35,887
#define ADD_TRAINER_PROB 36,914
#define MOUNTAIN_SYMBOL 38,943
#define BOULDER_SYMBOL 39,977
#define TREE_SYMBOL 40,1011
#define FOREST_SYMBOL 41,1045
#define GATE_SYMBOL 42,1079
#define PATH_SYMBOL 43,1113
#define BAILEY_SYMBOL 44,1147
#define POKEMART_SYMBOL 45,1181
#define POKEMON_CENTER_SYMBOL 46,1215
#define TALL_GRASS_SYMBOL 47,1249
#define SHORT_GRASS_SYMBOL 48,1283
#define WATER_SYMBOL 49,1317
#define ERROR_SYMBOL 50,1351
#define PC_SYMBOL 52,1386
#define HIKER_SYMBOL 53,1414
#define RIVAL_SYMBOL 54,1442
#define EXPLORER_SYMBOL 55,1470
#define SENTRY_SYMBOL 56,1498
#define PACER_SYMBOL 57,1526
#define SWIMMER_SYMBOL 58,1554
#define WANDERER_SYMBOL 59,1582
#define mappair(61,1611
#define mapxy(62,1668
#define heightpair(63,1703
#define heightxy(64,1766
typedef enum __attribute__ ((__packed__)) terrain_type 66,1808
  ter_boulder,67,1865
  ter_tree,68,1880
  ter_path,69,1892
  ter_mart,70,1904
  ter_center,71,1916
  ter_grass,72,1930
  ter_clearing,73,1943
  ter_mountain,74,1959
  ter_forest,75,1975
  ter_water,76,1989
  ter_gate,77,2002
  ter_bailey,78,2014
  num_terrain_types,79,2028
  ter_debug80,2049
} terrain_type_t;81,2061
class map 85,2147
  terrain_type_t map[map87,2168
  uint8_t height[height88,2204
  character *cmap[cmap89,2236
  heap_t turn;90,2269
  int32_t num_trainers;91,2284
  int8_t n,92,2308
  int8_t n, s,92,2308
  int8_t n, s, e,92,2308
  int8_t n, s, e, w;92,2308
class world 95,2333
  map *world[world97,2356
  pair_t cur_idx;98,2394
  map *cur_map;cur_map99,2412
  int hiker_dist[hiker_dist102,2535
  int rival_dist[rival_dist103,2567
  class pc pc;104,2599
  int quit;105,2614
  int add_trainer_prob;106,2626
  int char_seq_num;107,2650
#define rand_dir(116,2884
typedef struct path 122,3007
  heap_node_t *hn;hn123,3029
  uint8_t pos[pos124,3048
  uint8_t from[from125,3066
  int32_t cost;126,3085
} path_t;127,3101

pokedex.h,1784
#define POKEDEX_H2,19
class pokemon6,81
    int id;9,108
    std::string identifier;10,121
    int species_id;11,150
    int height;12,171
    int weight;13,188
    int base_experience;14,205
    int order;15,231
    int is_default;16,247
    pokemon(18,270
    void display(30,637
class moves44,1206
    int id;47,1231
    std::string identifier;48,1244
    int gen_id;49,1273
    int type_id;50,1290
    int power;51,1308
    int pp;52,1324
    int accuracy;53,1337
    int priority;54,1356
    int target_id;55,1375
    int damage_class_id;56,1395
    int effect_id;57,1421
    int effect_chance;58,1441
    int contest_type_id;59,1465
    int contest_effect_id;60,1491
    int super_contest_effect_id;61,1519
    moves(63,1555
    void display(82,2121
class pokemon_moves{pokemon_moves103,3175
    int pokemon_id;105,3210
    int version_group_id;106,3231
    int move_id;107,3258
    int pokemon_move_method_id;108,3276
    int level;109,3309
    int order;110,3325
    pokemon_moves(112,3343
    void display(121,3583
class pokemon_species 132,4059
    int id;134,4093
    std::string identifier;135,4106
    int generation_id;136,4135
    int evolves_from_species_id;137,4159
    int evolution_chain_id;138,4193
    int color_id;139,4222
    int shape_id;140,4241
    int habitat_id;141,4260
    int gender_rate;142,4281
    int capture_rate;143,4303
    int base_happiness;144,4326
    int is_baby;145,4351
    int hatch_counter;146,4369
    int has_gender_differences;147,4393
    int growth_rate_id;148,4426
    int forms_switchable;149,4451
    int is_legendary;150,4478
    int is_mythical;151,4501
    int order;152,4523
    int conquest_order;153,4539
    pokemon_species(155,4566
    void display(178,5338
